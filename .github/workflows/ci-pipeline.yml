name: Notes Application CI Pipeline

on:
  push:
    branches:
      - main
      - feature/**
      - feature
      - codeFix
  pull_request:
    branches:
      - main
    
jobs:
 ci-lint:
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v3
    
    - run: docker compose up -d
        
    - name: Use Node.js 17.x
      uses: actions/setup-node@v3
      with:
        node-version: "17.6.0"
        cache: "npm"
        cache-dependency-path: '**/package-lock.json'

    - run: npm install --prefix src      
    
    - run: npm run test-lint --prefix src
    
 ci-unit-test:
  needs: ci-lint
  env:
    working-directory: ./src
  runs-on: ubuntu-latest
  steps:
  - uses: actions/checkout@v3
  - run: docker compose up -d
  - name: Use Node.js 17.x
    uses: actions/setup-node@v3
    with:
      node-version: "17.6.0"
      cache: "npm"
      cache-dependency-path: '**/package-lock.json'
      
  - run: npm install --prefix src

  - run: npm run test-unit --prefix src
    
  - if: github.ref == 'refs/heads/main'
    uses: actions/upload-artifact@v3
    with: 
      name: unit-test-code-coverage
      path: ./src/coverage/coverage-final.json
      
  - if: github.ref == 'refs/heads/main'     
    uses: codecov/codecov-action@v2
    with:
      directory: ./src/coverage
      files: coverage-final.json
      fail_ci_if_error: true
      flags: unittests
      verbose: true
      dry_run: true
      
 ci-integration-test:
  needs: ci-unit-test
  runs-on: ubuntu-latest
  services:
   mongodb:
    image: mongo:4.0
    options: >-
      --health-cmd mongo
      --health-interval 10s
      --health-timeout 5s
      --health-retries 5
    ports:
      - 27017:27017
  
  steps:
  - uses: actions/checkout@v3

  - name: Use Node.js 17.x
    uses: actions/setup-node@v3
    with:
      node-version: "17.6.0"
      cache: "npm"
      cache-dependency-path: '**/src/package-lock.json'
      
  - run: npm install --prefix src
  
  - run: npm run test-integration --prefix src
    env:
      MONGO_URL: mongodb://localhost:27017/note
      APP_PORT: 3000

  - name: upload artefact
    if: |
      always() ||
      (github.ref == 'refs/heads/main'  )
    uses: actions/upload-artifact@v3
    with: 
      name: integration-test-code-coverage
      path: ./src/coverage/coverage-final.json
      
      
      
 ci-e2e-test:
   # needs: ci-integration-test
   # timeout-minutes: 60
   env:
    working-directory: ./src
    PLAYWRIGHT_TEST_BASE_URL: ${{ github.event.deployment_status.target_url }}
   runs-on: ubuntu-latest
   # if: github.event.deployment_status.state == 'success'
   steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 17.x
      uses: actions/setup-node@v3
      with:
        node-version: '17.6.0'
        cache: "npm"
        cache-dependency-path: '**/src/package-lock.json'
        
    - name: Install dependencies
      run: npm install --prefix src
      
    - name: Install Playwright
      run: npx playwright install --with-deps
      working-directory: ${{env.working-directory}}
      
    - name: Run Playwright tests
      run: npm run test-e2e --prefix src

 ci-package:
  env:
    working-directory: ./src
  if: github.ref == 'refs/heads/main'
  needs: ci-e2e-test
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v3

    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: "16"
        cache: "npm"
        cache-dependency-path: '**/package-lock.json'
        
    - run: npm install --prefix src
    
    - name: pack artifacts
      run: npm pack --prefix src
      working-directory: ${{env.working-directory}}

    - uses: actions/upload-artifact@v3
      with:
        name: node-todo-${{ github.sha }}
        path: ./src/*.tgz



